/* tslint:disable */
/* eslint-disable */
/**
 * TUBA API
 * TUBA by Jabba Ã¸1 - OpenAPI
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tuba.support@none.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface UserAccountDto
 */
export interface UserAccountDto {
  /**
   * Type of user account
   * @type {string}
   * @memberof UserAccountDto
   */
  type: UserAccountDtoTypeEnum
  /**
   * Account unique address or handle, depending on the account type.
   * @type {string}
   * @memberof UserAccountDto
   */
  identifier: string
  /**
   * Account name
   * @type {string}
   * @memberof UserAccountDto
   */
  name?: string
  /**
   * Specify if this is the default account for the given type of account.
   *
   * Only one account of a given type can be set as default.
   * @type {boolean}
   * @memberof UserAccountDto
   */
  _default?: boolean
  /**
   * Unique user account ID
   * @type {number}
   * @memberof UserAccountDto
   */
  id: number
  /**
   * Account status
   * @type {string}
   * @memberof UserAccountDto
   */
  status: UserAccountDtoStatusEnum
  /**
   * Last change date & time
   * @type {Date}
   * @memberof UserAccountDto
   */
  updatedAt?: Date
  /**
   * Account creation date & time
   * @type {Date}
   * @memberof UserAccountDto
   */
  createdAt?: Date
}

/**
 * @export
 */
export const UserAccountDtoTypeEnum = {
  Wallet: 'wallet',
  Email: 'email',
} as const
export type UserAccountDtoTypeEnum =
  (typeof UserAccountDtoTypeEnum)[keyof typeof UserAccountDtoTypeEnum]

/**
 * @export
 */
export const UserAccountDtoStatusEnum = {
  Enabled: 'enabled',
  Disabled: 'disabled',
  Blocked: 'blocked',
} as const
export type UserAccountDtoStatusEnum =
  (typeof UserAccountDtoStatusEnum)[keyof typeof UserAccountDtoStatusEnum]

/**
 * Check if a given object implements the UserAccountDto interface.
 */
export function instanceOfUserAccountDto(value: object): boolean {
  if (!('type' in value)) return false
  if (!('identifier' in value)) return false
  if (!('id' in value)) return false
  if (!('status' in value)) return false
  return true
}

export function UserAccountDtoFromJSON(json: any): UserAccountDto {
  return UserAccountDtoFromJSONTyped(json, false)
}

export function UserAccountDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UserAccountDto {
  if (json == null) {
    return json
  }
  return {
    type: json['type'],
    identifier: json['identifier'],
    name: json['name'] == null ? undefined : json['name'],
    _default: json['default'] == null ? undefined : json['default'],
    id: json['id'],
    status: json['status'],
    updatedAt: json['updatedAt'] == null ? undefined : new Date(json['updatedAt']),
    createdAt: json['createdAt'] == null ? undefined : new Date(json['createdAt']),
  }
}

export function UserAccountDtoToJSON(value?: UserAccountDto | null): any {
  if (value == null) {
    return value
  }
  return {
    type: value['type'],
    identifier: value['identifier'],
    name: value['name'],
    default: value['_default'],
    id: value['id'],
    status: value['status'],
    updatedAt:
      value['updatedAt'] == null ? undefined : value['updatedAt'].toISOString(),
    createdAt:
      value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
  }
}
