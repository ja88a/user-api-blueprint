/* tslint:disable */
/* eslint-disable */
/**
 * TUBA API
 * TUBA by Jabba Ã¸1 - OpenAPI
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tuba.support@none.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { ServiceHealthStatusDto } from './ServiceHealthStatusDto'
import {
  ServiceHealthStatusDtoFromJSON,
  ServiceHealthStatusDtoFromJSONTyped,
  ServiceHealthStatusDtoToJSON,
} from './ServiceHealthStatusDto'

/**
 *
 * @export
 * @interface HealthCheckDto
 */
export interface HealthCheckDto {
  /**
   * Service name, unique identifier
   * @type {string}
   * @memberof HealthCheckDto
   */
  name?: string
  /**
   * Service status
   * @type {string}
   * @memberof HealthCheckDto
   */
  status: HealthCheckDtoStatusEnum
  /**
   * List of sub-service statuses
   * @type {Array<ServiceHealthStatusDto>}
   * @memberof HealthCheckDto
   */
  services?: Array<ServiceHealthStatusDto>
  /**
   * Service version number
   * @type {string}
   * @memberof HealthCheckDto
   */
  version?: string
}

/**
 * @export
 */
export const HealthCheckDtoStatusEnum = {
  Ok: 'ok',
  Warning: 'warning',
  Error: 'error',
  Ok2: 'ok',
} as const
export type HealthCheckDtoStatusEnum =
  (typeof HealthCheckDtoStatusEnum)[keyof typeof HealthCheckDtoStatusEnum]

/**
 * Check if a given object implements the HealthCheckDto interface.
 */
export function instanceOfHealthCheckDto(value: object): boolean {
  if (!('status' in value)) return false
  return true
}

export function HealthCheckDtoFromJSON(json: any): HealthCheckDto {
  return HealthCheckDtoFromJSONTyped(json, false)
}

export function HealthCheckDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): HealthCheckDto {
  if (json == null) {
    return json
  }
  return {
    name: json['name'] == null ? undefined : json['name'],
    status: json['status'],
    services:
      json['services'] == null
        ? undefined
        : (json['services'] as Array<any>).map(ServiceHealthStatusDtoFromJSON),
    version: json['version'] == null ? undefined : json['version'],
  }
}

export function HealthCheckDtoToJSON(value?: HealthCheckDto | null): any {
  if (value == null) {
    return value
  }
  return {
    name: value['name'],
    status: value['status'],
    services:
      value['services'] == null
        ? undefined
        : (value['services'] as Array<any>).map(ServiceHealthStatusDtoToJSON),
    version: value['version'],
  }
}
